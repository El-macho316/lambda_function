{
 "Resources": {
  "FinancialAnalysisFuncServiceRole9F672B8A": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "LambdaAwsCdkStack/FinancialAnalysisFunc/ServiceRole/Resource"
   }
  },
  "FinancialAnalysisFuncB749223B": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "arm64"
    ],
    "Code": {
     "ImageUri": {
      "Fn::Sub": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:359b0e4ea177966597ef0c1758b0c424a253ebc24805f2bd6374361ebeb29c0e"
     }
    },
    "Description": "Financial data analysis and scoring service",
    "FunctionName": "financial-analysis-service",
    "MemorySize": 1024,
    "PackageType": "Image",
    "Role": {
     "Fn::GetAtt": [
      "FinancialAnalysisFuncServiceRole9F672B8A",
      "Arn"
     ]
    },
    "Timeout": 10
   },
   "DependsOn": [
    "FinancialAnalysisFuncServiceRole9F672B8A"
   ],
   "Metadata": {
    "aws:cdk:path": "LambdaAwsCdkStack/FinancialAnalysisFunc/Resource",
    "aws:asset:path": "asset.359b0e4ea177966597ef0c1758b0c424a253ebc24805f2bd6374361ebeb29c0e",
    "aws:asset:dockerfile-path": "Dockerfile",
    "aws:asset:property": "Code.ImageUri"
   }
  },
  "FinancialAnalysisFuncLogGroup79D19158": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "FinancialAnalysisFuncB749223B"
       }
      ]
     ]
    },
    "RetentionInDays": 731
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "LambdaAwsCdkStack/FinancialAnalysisFunc/LogGroup/Resource"
   }
  },
  "FinancialAnalysisFuncFunctionUrlB849DE1A": {
   "Type": "AWS::Lambda::Url",
   "Properties": {
    "AuthType": "NONE",
    "Cors": {
     "AllowHeaders": [
      "*"
     ],
     "AllowMethods": [
      "*"
     ],
     "AllowOrigins": [
      "*"
     ]
    },
    "TargetFunctionArn": {
     "Fn::GetAtt": [
      "FinancialAnalysisFuncB749223B",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "LambdaAwsCdkStack/FinancialAnalysisFunc/FunctionUrl/Resource"
   }
  },
  "FinancialAnalysisFuncinvokefunctionurl2D558FE3": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunctionUrl",
    "FunctionName": {
     "Fn::GetAtt": [
      "FinancialAnalysisFuncB749223B",
      "Arn"
     ]
    },
    "FunctionUrlAuthType": "NONE",
    "Principal": "*"
   },
   "Metadata": {
    "aws:cdk:path": "LambdaAwsCdkStack/FinancialAnalysisFunc/invoke-function-url"
   }
  },
  "SimplePythonFuncServiceRoleB3B27316": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "LambdaAwsCdkStack/SimplePythonFunc/ServiceRole/Resource"
   }
  },
  "SimplePythonFuncB0D841A4": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "ZipFile": "\nimport json\nimport boto3\nfrom datetime import datetime\n\ndef lambda_handler(event, context):\n    \"\"\"\n    Simple example function - you can replace this with your actual logic\n    \"\"\"\n    return {\n        'statusCode': 200,\n        'headers': {\n            'Content-Type': 'application/json',\n            'Access-Control-Allow-Origin': '*',\n            'Access-Control-Allow-Methods': 'GET, POST, OPTIONS',\n            'Access-Control-Allow-Headers': 'Content-Type',\n        },\n        'body': json.dumps({\n            'message': 'Hello from second Lambda function!',\n            'timestamp': datetime.now().isoformat(),\n            'event': event\n        })\n    }\n      "
    },
    "Description": "Simple Python function example",
    "FunctionName": "simple-python-service",
    "Handler": "index.lambda_handler",
    "MemorySize": 128,
    "Role": {
     "Fn::GetAtt": [
      "SimplePythonFuncServiceRoleB3B27316",
      "Arn"
     ]
    },
    "Runtime": "python3.11",
    "Timeout": 10
   },
   "DependsOn": [
    "SimplePythonFuncServiceRoleB3B27316"
   ],
   "Metadata": {
    "aws:cdk:path": "LambdaAwsCdkStack/SimplePythonFunc/Resource"
   }
  },
  "SimplePythonFuncLogGroup39255A5A": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "SimplePythonFuncB0D841A4"
       }
      ]
     ]
    },
    "RetentionInDays": 731
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "LambdaAwsCdkStack/SimplePythonFunc/LogGroup/Resource"
   }
  },
  "SimplePythonFuncFunctionUrlC31C1E0F": {
   "Type": "AWS::Lambda::Url",
   "Properties": {
    "AuthType": "NONE",
    "Cors": {
     "AllowHeaders": [
      "*"
     ],
     "AllowMethods": [
      "*"
     ],
     "AllowOrigins": [
      "*"
     ]
    },
    "TargetFunctionArn": {
     "Fn::GetAtt": [
      "SimplePythonFuncB0D841A4",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "LambdaAwsCdkStack/SimplePythonFunc/FunctionUrl/Resource"
   }
  },
  "SimplePythonFuncinvokefunctionurl3C555AE7": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunctionUrl",
    "FunctionName": {
     "Fn::GetAtt": [
      "SimplePythonFuncB0D841A4",
      "Arn"
     ]
    },
    "FunctionUrlAuthType": "NONE",
    "Principal": "*"
   },
   "Metadata": {
    "aws:cdk:path": "LambdaAwsCdkStack/SimplePythonFunc/invoke-function-url"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/71TTW8bIRD9LeEYYer4Usk3p99Sa0d2c1pZ0QQma2I+VgzU2qL97xXrXcdWLj35BDzevKc3AzMxm96J6Q0caCLVfmL0s8ibCHLP4UBP2YB9ViDyZy/3GH5YqPFrcjJq76rMpFfI5uyWcWbR+tBu9N8RiNqiT3E4QZA7HVHGFEaCQpJBN0VqQF4G5SXYI6njV/DY8k8vbgzFx81jMFU+sUeHFHe/26YULlfLL4wz6QOxeWZgjD+g+oVx5xWxecVu2ZaP8HcEhYV4VDmCq6Br7Y5gV5Jez6yP/BhMWR4wWE10nr3KLCRXmjuI7MApg2E4nU3kcgDv5vNf7e+4Bivy2husMgOiZFHdtyVoE7STugGzkNIndxp0zykFi7eGdZxZcFCjevBGS42lMfkCaxfBnUyvZ9V3u0h0HGV4AiKMJM5+1KIg5U6ssfGkow/tPRBWW258TSL/9PW34FNTZWaG7cUfeQ/2nmNZ1/E1kk9BYtWnKs+lN91EqLWrC3mVYpNix51XKF7pw5/ZVNx9FNObV9J6MrwHsT6u/wDe2CTiNwQAAA=="
   },
   "Metadata": {
    "aws:cdk:path": "LambdaAwsCdkStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "FinancialAnalysisFunctionUrl": {
   "Description": "URL for the Financial Analysis Function",
   "Value": {
    "Fn::GetAtt": [
     "FinancialAnalysisFuncFunctionUrlB849DE1A",
     "FunctionUrl"
    ]
   }
  },
  "SimplePythonFunctionUrl": {
   "Description": "URL for the Simple Python Function",
   "Value": {
    "Fn::GetAtt": [
     "SimplePythonFuncFunctionUrlC31C1E0F",
     "FunctionUrl"
    ]
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-3"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-4"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "il-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      }
     ]
    },
    {
     "Fn::Equals": [
      {
       "Ref": "AWS::Region"
      },
      "us-west-2"
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}